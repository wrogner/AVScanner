Metadata-Version: 2.1
Name: AVScanner
Version: 2023.0.1
Summary: ClamAV Frontend for Mac
Author-email: Wolf Rogner <war@rsb.at>
Maintainer-email: Wolf Rogner <war@rsb.at>
License: MIT License
        
        Copyright (c) 2023 Wolf Rogner
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Keywords: Antivirus,ClamAV,MacOS
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: pillow
Requires-Dist: customtkinter

<img src="doc/img/AVScanner.png" width="150">

# AVScanner

<span style="font-size: 130%">A ClamAV frontend to scan for Viruses.</span>

Sample project to exercise UI development, packaging and deployment in Python as proposed in 2023.

- Scanning relies on [_ClamAV_](https://www.clamav.net/)
- GUI is based on [_CustomTkinter_](https://customtkinter.tomschimansky.com) (a superset of Tkinter and TTK by Tom Schimansky).
- Python was updated from [_3.11.6_](https://docs.python.org/3.11/) to [_3.12.0_](https://docs.python.org/3.12/) during development.
- Builds are generated by [_build_](https://pypa-build.readthedocs.io/en/stable/index.html) using [_setuptools_](https://setuptools.pypa.io/en/latest/index.html) as backend
- PyPI upload done with [_twine_](https://twine.readthedocs.io/en/latest/)

Development follows a road map that will evolve continuously.

### Executable requirements

- [clamscan](https://www.clamav.net/) installed locally on the machine (and accessible on the $PATH)</br>
  (on Mac, install via [brew](https://formulae.brew.sh/formula/clamav#default))
- [customtkinter](https://customtkinter.tomschimansky.com/documentation/widgets) (GUI widgets)
- [darkdetect](https://github.com/albertosottile/darkdetect) (autoselect light/dark mode)
- [Pillow](https://pillow.readthedocs.io/en/stable/reference/Image.html)
- [setuptools](https://pypi.org/project/setuptools/) (required by customtkinter for version detection, see issue ID #2023 )

### Build requirements

- [build](https://pypi.org/project/build/)
- [twine](https://pypi.org/project/twine/)

### Documentation requirements

- [sphinx](https://pypi.org/project/Sphinx/)

<br>

Code Repo: https://github.com/wrogner/AVScanner

### Credits

&copy; 2023 by [_war_](https://github.com/wrogner) under MIT license

### Open Issues / Roadmap

<img src="doc/img/roadmap.png" width="100">

TODO:<br>
<sub>(Note: I use [Todo Tree](https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree) in VSCode to color-codes stati. It's optional and not transfered to the markdown file.)</sub>

##### Version 0.1

[x] Add remote repo<br>
[x] Setup GUI editing<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PyGubu not really usable (outdated code)<br>
[x] Create application framework<br>
[x] Application deployment (packaging, executable)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[x] create PyPI account [https://packaging.python.org/en/latest/tutorials/packaging-projects/#uploading-the-distribution-archives]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[x] install build tools (build, setuptools) [https://setuptools.pypa.io/en/latest/index.html]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[x] create buildable package [https://packaging.python.org/en/latest/tutorials/packaging-projects/#generating-distribution-archives]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[x] upload using twine [https://packaging.python.org/en/latest/tutorials/packaging-projects/#uploading-the-distribution-archives]<br>

##### Version 1

[ ] Update logic<br>
[ ] Simple Scanning (single file / directory)<br>
[ ] update database (call freshclam)<br>
[ ] document source code (using sphinx)<br>

##### Version 2

[ ] Call AVScanner from CLI
[ ] Launch AVScanner from Finder
[ ] Command line switches
